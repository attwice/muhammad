{"version":3,"sources":["components/nabvar.js","components/banner.js","components/mint.js","components/roadmap.js","components/faq.js","components/animation.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","useState","sticky","setSticky","useEffect","window","addEventListener","handleScroll","scrollY","className","Navbar","variant","expand","style","backgroundColor","Brand","href","src","alt","Toggle","aria-controls","Collapse","id","Nav","Link","onClick","scrollTo","target","rel","loading","width","Banner","contractABI","require","Mint","createAlchemyWeb3","process","eth","Contract","walletAddress","show","setShow","tokenNumber","setTokenNumber","status","supply","handleClose","handleShow","a","onMintPressed","connectWalletPressed","height","Button","length","String","substring","Modal","onHide","Header","closeButton","Title","Body","maxWidth","type","aria-hidden","Form","Label","Footer","Roadmap","WebFont","load","google","families","date","title","content","FAQ","Accordion","map","Item","eventKey","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","pc","tablet","mobile","Animation","swipeable","draggable","showDots","ssr","infinite","autoPlaySpeed","keyBoardControl","customTransition","transitionDuration","containerClass","dotListClass","itemClass","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ef306c8.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav \r\n} from \"react-bootstrap\";\r\n \r\nconst Navigation = () => { \r\n  const [sticky, setSticky] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  const handleScroll = () => {\r\n    if (window.scrollY >= 86) {\r\n      setSticky(true);\r\n    } else if (window.scrollY < 85) {\r\n      setSticky(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`header${sticky ? ' sticky' : ''}`}>\r\n      <Navbar variant=\"dark\" expand=\"md\" style={{backgroundColor: '#333333'}}>\r\n        <Navbar.Brand href=\"/\" className=\"px-4\">\r\n          <img src=\"./images/logo.png\" className=\"logo-img\" alt=\"\"/>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"mx-4\"/>\r\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"d-md-flex justify-content-between\">\r\n          <Nav className=\"mr-auto flex-grow-1\">                               \r\n            <Nav.Link href=\"#home\" className=\"cus-nav-link text-white\" onClick={() => window.scrollTo(0, 0)}>Home</Nav.Link>\r\n            {/* <Nav.Link href=\"#animation\" className=\"cus-nav-link\">Animation</Nav.Link> */}\r\n            <Nav.Link href=\"#mint\" className=\"cus-nav-link text-white\">Mint</Nav.Link> \r\n            <Nav.Link href=\"#roadmap\" className=\"cus-nav-link text-white\">Roadmap</Nav.Link> \r\n            <Nav.Link href=\"#faq\" className=\"cus-nav-link text-white\">FAQs</Nav.Link>        \r\n            <div className=\"d-flex mx-4 mb-2 mb-md-0 social-link\">                \r\n              <a href=\"#\" target=\"_blank\" className=\"d-flex align-items-center pe-3\" rel=\"noreferrer\">              \r\n                <img src=\"https://img.icons8.com/color/48/000000/twitter--v1.png\" loading=\"lazy\" width=\"32\" alt=\"\"/>\r\n              </a>             \r\n              <a href=\"#\" target=\"_blank\" className=\"d-flex align-items-center pe-3\" rel=\"noreferrer\">              \r\n                <img src=\"https://img.icons8.com/color/50/000000/discord--v2.png\" loading=\"lazy\" width=\"32\" alt=\"\"/>\r\n              </a>  \r\n              <a href=\"#\" target=\"_blank\" className=\"d-flex align-items-center pe-3\" rel=\"noreferrer\">\r\n                <img src=\"/images/Logomark-Blue.png\" loading=\"lazy\" width=\"25\" alt=\"\" />\r\n              </a> \r\n              <a href=\"#\" target=\"_blank\" className=\"d-flex align-items-center\" rel=\"noreferrer\">          \r\n                <img src=\"https://img.icons8.com/fluency-systems-regular/24/000000/instagram-new--v2.png\" loading=\"lazy\" width=\"32\" alt=\"\"/>\r\n              </a> \r\n            </div> \r\n          </Nav>                    \r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\nexport default Navigation;","import React from \"react\";\r\n\r\nconst Banner = () => {\r\n  return (\r\n    <div className=\"banner\">\r\n      <img src=\"./images/banner.png\" alt=\"\"/>\r\n    </div>\r\n  );  \r\n};\r\n\r\nexport default Banner;","import React, { useState, useEffect } from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport { connectWallet, getCurrentWalletConnected } from \"../utils/interact.js\";\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\r\nconst contractABI = require(\"../contract-abi.json\");\r\nconst contractAddress = \"0x751A9a39AF7E70C37916262644e4D0b8fa018CDE\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst contract = new web3.eth.Contract(contractABI, contractAddress);  \r\n\r\nconst mintNFT = async(amount, price) => {  \r\n  const {address} = await getCurrentWalletConnected();\r\n  if (address === \"\") {\r\n    return {\r\n      success: false, \r\n      status: \"❗Please make sure wallet connected.\",           \r\n    }\r\n  }  \r\n  else {      \r\n    contract.methods.mint(amount).send({from: address, gasPrice: 80000000000, gas: 160000*amount, value: (amount * price)})\r\n    .on(\"confirmation\", function () {      \r\n    })\r\n    .on('error', async function (error, receipt) {\r\n      console.log(error);      \r\n    }); \r\n\r\n    return {\r\n      status: \"\",\r\n    }   \r\n    \r\n  }\r\n}    \r\n\r\nconst Mint = () => {\r\n  const [walletAddress, setWallet] = useState(\"\");  \r\n  const [show, setShow] = useState(false);\r\n  const [tokenNumber, setTokenNumber] = useState(1);\r\n  const [status, setStatus] = useState(\"\"); \r\n  const publicsale = true;\r\n  const [supply, setSupply] = useState(0);\r\n\r\n  const handleClose = () => setShow(false);  \r\n  const publicsale_price = 30000000000000000;\r\n\r\n  const handleShow = async () => {  \r\n    setShow(true);   \r\n  };\r\n\r\n  const onMintHandle = () => {       \r\n    setStatus(\"Mint not allowed!\");\r\n  };\r\n\r\n  const decreaseTokenNumber = () => {\r\n    // if (tokenNumber === 1) {\r\n    //   return;\r\n    // }\r\n    // setTokenNumber(tokenNumber - 1);\r\n  }\r\n\r\n  const onMintPressed = async () => {          \r\n    // const { status } = await mintNFT(tokenNumber, publicsale_price); \r\n    //   setStatus(status);         \r\n  };\r\n\r\n  // useEffect(() => {    \r\n  //   async function fetchData() {\r\n  //     const {address} = await getCurrentWalletConnected();      \r\n  //     contract.methods.totalSupply().call().then((_supply) => {        \r\n  //       setSupply(_supply);\r\n  //     }).catch((err) => console.log(err))\r\n  //     setWallet(address);    \r\n  //     addWalletListener(); \r\n  //   }\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n  function addWalletListener() {\r\n    // if (window.ethereum) {\r\n    //   window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n    //     if (accounts.length > 0) {\r\n    //       setWallet(accounts[0]);          \r\n    //     } else {\r\n    //       setWallet(\"\");          \r\n    //     }\r\n    //   });\r\n    // } else {\r\n         \r\n    // }\r\n  } \r\n\r\n  const connectWalletPressed = async () => {\r\n    // const walletResponse = await connectWallet();    \r\n    // setWallet(walletResponse.address);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mint-container purple-text\">\r\n      <div className=\"mint-header text-center text-white pt-5\" id=\"mint\">\r\n        Mint\r\n      </div>\r\n      <div className=\"mint-panel\">\r\n        <div className=\"mint-title pt-4 pt-md-5 text-white\">\r\n          Mint Cards\r\n        </div>\r\n        <div className=\"mint-narration text-white\">\r\n          Get you own crazy, funky, funny, Spell Card here. \r\n          They are here to make people laugh after the pandemic and have a fun time within the communtiy. \r\n          Our main goal is to find each of these Spell Cards a owner where they will battle it out between who is the most dirty out of all of them.\r\n        </div>\r\n        <div className=\"collage mb-5\">\r\n          <img src=\"./images/2.gif\" alt=\"\" width=\"250\" height=\"250\"/>\r\n        </div>\r\n        <div className=\"mint-price text-white mt-5 text-center\">\r\n          Max per Tx 2<br />\r\n          Only 0.03 Eth Each\r\n        </div>\r\n        <div className=\"text-center text-white\">\r\n          <Button className=\"connect-btn mt-3\" onClick={connectWalletPressed}>\r\n            {walletAddress.length > 0 ? (                    \r\n              \"\" +\r\n              String(walletAddress).substring(0, 6) +\r\n              \"...\" +\r\n              String(walletAddress).substring(38)\r\n              ) : (\r\n                <span>Connect</span>\r\n              )\r\n            } \r\n          </Button>\r\n        </div>\r\n        <div className=\"mint-status text-center text-white\">\r\n          {supply} / 50 Sold Out \r\n        </div>\r\n        <div className=\"text-center\">\r\n          <Button className=\"mint-btn mb-3 mb-md-5\" onClick={handleShow}>\r\n            Mint\r\n          </Button>\r\n        </div>\r\n      </div>  \r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Mint some Spell Cards</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <img src=\"./images/2.gif\" alt=\"\" style={{maxWidth: \"220px\"}}/>\r\n          <div className=\"mint-number\">\r\n            <button type=\"button\" onClick={decreaseTokenNumber}><span aria-hidden=\"true\">-</span></button>\r\n            <Form>\r\n              <Form.Label>\r\n                { tokenNumber }\r\n              </Form.Label>                  \r\n              {status ? <div>{status}</div> \r\n                : <div></div>}\r\n            </Form>                \r\n            {(tokenNumber < 2) ? <button type=\"button\" onClick={() => setTokenNumber(tokenNumber + 1)}><span aria-hidden=\"true\">+</span></button> \r\n              : <button type=\"button\" onClick={() => setTokenNumber(tokenNumber)}><span aria-hidden=\"true\">+</span></button>\r\n            }\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {(!publicsale) ? <Button variant=\"primary\" onClick={onMintHandle}>Mint</Button> \r\n            : <Button variant=\"primary\" onClick={onMintPressed}>Mint</Button>\r\n          }              \r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>               \r\n    </div>\r\n  );  \r\n};\r\n\r\nexport default Mint;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import {Button} from \"react-bootstrap\";\r\n// import { connectWallet, getCurrentWalletConnected } from \"../utils/interact.js\";\r\n\r\n// import Modal from 'react-bootstrap/Modal';\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n// const alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\r\n// const contractABI = require(\"../contract-abi.json\");\r\n// const contractAddress = \"0x751A9a39AF7E70C37916262644e4D0b8fa018CDE\";\r\n// const { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// const web3 = createAlchemyWeb3(alchemyKey);\r\n// const contract = new web3.eth.Contract(contractABI, contractAddress);  \r\n\r\n// const mintNFT = async(amount, price) => {  \r\n//   const {address} = await getCurrentWalletConnected();\r\n//   if (address === \"\") {\r\n//     return {\r\n//       success: false, \r\n//       status: \"❗Please make sure wallet connected.\",           \r\n//     }\r\n//   }  \r\n//   else {      \r\n//     contract.methods.mint(amount).send({from: address, gasPrice: 80000000000, gas: 160000*amount, value: (amount * price)})\r\n//     .on(\"confirmation\", function () {      \r\n//     })\r\n//     .on('error', async function (error, receipt) {\r\n//       console.log(error);      \r\n//     }); \r\n\r\n//     return {\r\n//       status: \"\",\r\n//     }   \r\n    \r\n//   }\r\n// }    \r\n\r\n// const Mint = () => {\r\n//   const [walletAddress, setWallet] = useState(\"\");  \r\n//   const [show, setShow] = useState(false);\r\n//   const [tokenNumber, setTokenNumber] = useState(1);\r\n//   const [status, setStatus] = useState(\"\"); \r\n//   const publicsale = true;\r\n//   const [supply, setSupply] = useState(0);\r\n\r\n//   const handleClose = () => setShow(false);  \r\n//   const publicsale_price = 30000000000000000;\r\n\r\n//   const handleShow = async () => {  \r\n//     setShow(true);   \r\n//   };\r\n\r\n//   const onMintHandle = () => {       \r\n//     setStatus(\"Mint not allowed!\");\r\n//   };\r\n\r\n  // const decreaseTokenNumber = () => {\r\n  //   if (tokenNumber === 1) {\r\n  //     return;\r\n  //   }\r\n  //   setTokenNumber(tokenNumber - 1);\r\n  // }\r\n\r\n//   const onMintPressed = async () => {          \r\n//     const { status } = await mintNFT(tokenNumber, publicsale_price); \r\n//       setStatus(status);         \r\n//   };\r\n\r\n//   useEffect(() => {    \r\n//     async function fetchData() {\r\n//       const {address} = await getCurrentWalletConnected();      \r\n//       contract.methods.totalSupply().call().then((_supply) => {        \r\n//         setSupply(_supply);\r\n//       }).catch((err) => console.log(err))\r\n//       setWallet(address);    \r\n//       addWalletListener(); \r\n//     }\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   function addWalletListener() {\r\n//     if (window.ethereum) {\r\n//       window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n//         if (accounts.length > 0) {\r\n//           setWallet(accounts[0]);          \r\n//         } else {\r\n//           setWallet(\"\");          \r\n//         }\r\n//       });\r\n//     } else {\r\n         \r\n//     }\r\n//   } \r\n\r\n//   const connectWalletPressed = async () => {\r\n//     const walletResponse = await connectWallet();    \r\n//     setWallet(walletResponse.address);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"mint-container purple-text\">\r\n//       <div className=\"mint-header text-center text-white pt-5\" id=\"mint\">\r\n//         Mint\r\n//       </div>\r\n//       <div className=\"mint-panel\">\r\n//         <div className=\"mint-title pt-4 pt-md-5 text-white\">\r\n//           Mint Cards\r\n//         </div>\r\n//         <div className=\"mint-narration text-white\">\r\n//           Get you own crazy, funky, funny, Spell Card here. \r\n//           They are here to make people laugh after the pandemic and have a fun time within the communtiy. \r\n//           Our main goal is to find each of these Spell Cards a owner where they will battle it out between who is the most dirty out of all of them.\r\n//         </div>\r\n//         <div className=\"collage mb-5\">\r\n//           <img src=\"./images/2.gif\" alt=\"\" width=\"300\" height=\"300\"/>\r\n//         </div>\r\n//         <div className=\"mint-price text-white mt-5 text-center\">\r\n//           Max per Tx 20<br />\r\n//           Only 0.03 Eth Each\r\n//         </div>\r\n//         <div className=\"text-center text-white\">\r\n//           <Button className=\"connect-btn mt-3\" onClick={connectWalletPressed}>\r\n//             {walletAddress.length > 0 ? (                    \r\n//               \"\" +\r\n//               String(walletAddress).substring(0, 6) +\r\n//               \"...\" +\r\n//               String(walletAddress).substring(38)\r\n//               ) : (\r\n//                 <span>Connect</span>\r\n//               )\r\n//             } \r\n//           </Button>\r\n//         </div>\r\n//         <div className=\"mint-status text-center text-white\">\r\n//           {supply} / 9999 Sold Out \r\n//         </div>\r\n//         <div className=\"text-center\">\r\n//           <Button className=\"mint-btn mb-3 mb-md-5\" onClick={handleShow}>\r\n//             Mint\r\n//           </Button>\r\n//         </div>\r\n//       </div>  \r\n//       <Modal show={show} onHide={handleClose}>\r\n//         <Modal.Header closeButton>\r\n//           <Modal.Title>Mint some Spell Cards</Modal.Title>\r\n//         </Modal.Header>\r\n//         <Modal.Body>\r\n//           <img src=\"./images/ALL GIF.gif\" alt=\"\" style={{maxWidth: \"220px\"}}/>\r\n//           <div className=\"mint-number\">\r\n//             <button type=\"button\" onClick={decreaseTokenNumber}><span aria-hidden=\"true\">-</span></button>\r\n//             <Form>\r\n//               <Form.Label>\r\n//                 { tokenNumber }\r\n//               </Form.Label>                  \r\n//               {status ? <div>{status}</div> \r\n//                 : <div></div>}\r\n//             </Form>                \r\n//             {(tokenNumber < 20) ? <button type=\"button\" onClick={() => setTokenNumber(tokenNumber + 1)}><span aria-hidden=\"true\">+</span></button> \r\n//               : <button type=\"button\" onClick={() => setTokenNumber(tokenNumber)}><span aria-hidden=\"true\">+</span></button>\r\n//             }\r\n//           </div>\r\n//         </Modal.Body>\r\n//         <Modal.Footer>\r\n//           {(!publicsale) ? <Button variant=\"primary\" onClick={onMintHandle}>Mint</Button> \r\n//             : <Button variant=\"primary\" onClick={onMintPressed}>Mint</Button>\r\n//           }              \r\n//           <Button variant=\"secondary\" onClick={handleClose}>\r\n//             Close\r\n//           </Button>\r\n//         </Modal.Footer>\r\n//       </Modal>               \r\n//     </div>\r\n//   );  \r\n// };\r\n\r\n// export default Mint;","import React, { useEffect } from \"react\";\r\nimport WebFont from 'webfontloader';\r\n\r\nconst Roadmap = () => {\r\n  useEffect(() => {\r\n    WebFont.load({\r\n      google: {\r\n        families: ['Purple Purse', 'Roboto']\r\n      }\r\n    });\r\n   }, []);\r\n\r\n  return (\r\n    <div className=\"roadmap-container purple-text\">\r\n      <div className=\"roadmap-header text-center text-white\" id=\"roadmap\">\r\n        Roadmap\r\n      </div>    \r\n      <div className=\"roadmap-panel mb-3 mb-sm-4\">\r\n        <div className=\"roadmap-title text-center text-white\">\r\n          Feburary 2022\r\n        </div>\r\n        <div className=\"position-relative roadmap-text-height\">\r\n          <div className=\"roadmap-text text-center position-absolute text-white\">\r\n            Artwork Development<br />\r\n            Website Launch<br />\r\n            Social Media Launch\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"roadmap-panel mb-3 mb-sm-4\">\r\n        <div className=\"roadmap-title text-center text-white\">\r\n          March 2022\r\n        </div>\r\n        <div className=\"position-relative roadmap-text-height\">\r\n          <div className=\"roadmap-text text-center position-absolute text-white\">\r\n            Artwork published<br />\r\n            Minting accessible<br />\r\n            10 Spell Cards Giveaway at 10% minted\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"roadmap-panel mb-3 mb-sm-4\">\r\n        <div className=\"roadmap-title text-center text-white\">\r\n          April 2022\r\n        </div>\r\n        <div className=\"position-relative roadmap-text-height\">\r\n          <div className=\"roadmap-text text-center position-absolute text-white\">\r\n            Top holder will get custom NFT<br />\r\n            Art competition for Prizes<br />\r\n            Interviews for new Spell Card team members<br />\r\n            New website development\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"roadmap-panel mb-3 mb-sm-4\">\r\n        <div className=\"roadmap-title text-center text-white\">\r\n          May 2022\r\n        </div>\r\n        <div className=\"position-relative roadmap-text-height\">\r\n          <div className=\"roadmap-text roadmap-text2 text-center position-absolute text-white\">\r\n            Spell Card Merchandise store???<br />\r\n            To Be Announced\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );  \r\n};\r\n\r\nexport default Roadmap;","import React from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\n\r\nconst date = [\r\n  {\r\n    id: 1,\r\n    title: \"What are Spell Cards?\",\r\n    content: \"Spell Cards are Non-Fungible Tokens (NFTs), unique digital assets that can take the form of artwork and provide utility to holders. Spell Cards stand apart with a focus on making people put a smile on their faces. This allows the team and entire community to help those in need and create more products for our community.\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"How can I purchase a Spell Card?\",\r\n    content: \"Click the mint tab at the top of the website. Then connect your wallet and click mint on the amount you want to mint. The minting dialog allows you to mint up to 20 Spell Cards at a time.\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"How much does a Spell Card cost?\",\r\n    content: \"Each Spell Card costs .03 ETH to mint. Although Ethereum is subject to price action, the cost of minting will never change.\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"When Will Spell Cards be available for purchase?\",\r\n    content: \"Spell Cards have no set date but we are looking to be ready for the long haul soon.\",\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"What was the creation process like for the Spell Cards?\",\r\n    content: \"Thinking of some ideas for a token idea, we came upon Spell Cards. We would make them scummy looking and ruthless just to make people laugh.\",\r\n  },\r\n  {\r\n    id: 6,\r\n    title: \"Are there future plans for Spell Card that haven't been mentioned?\",\r\n    content: \"Yes, we are intentionally keeping some aspects of the project undisclosed to further develop ideas and to ensure we are able to fully deliver. Aside from this, we will be relying on the community's voice for future project plans.\",\r\n  },\r\n  {\r\n    id: 7,\r\n    title: \"Where can I contact the Spell Card team?\",\r\n    content: \"You can contact us through on Twitter or Discord\",\r\n  },\r\n];\r\n\r\nconst FAQ = () => {\r\n  return (\r\n    <div className=\"faq-container purple-text\">\r\n      <div className=\"faq-header text-center text-white\" id=\"faq\">\r\n        FAQ\r\n      </div>\r\n      <div className=\"faq-text px-2 px-md-4 text-white container pb-5\">\r\n        <Accordion>\r\n          {date.map(({ id, title, content }) => (\r\n            <Accordion.Item key={`${id}`} eventKey={id}>\r\n              <Accordion.Header><h2>{title}</h2></Accordion.Header>\r\n              <Accordion.Body className=\"text-white\">\r\n                {content}\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n          ))}\r\n        </Accordion>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FAQ;","import React from \"react\";\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\n\r\nconst responsive = {\r\n  superLargeDesktop: {\r\n    // the naming can be any, depends on you.\r\n    breakpoint: { max: 4000, min: 1600 },\r\n    items: 6\r\n  },\r\n  desktop: {\r\n    breakpoint: { max: 1600, min: 1300 },\r\n    items: 5\r\n  },\r\n  pc: {\r\n    breakpoint: { max: 1300, min: 1000 },\r\n    items: 4\r\n  },\r\n  tablet: {\r\n    breakpoint: { max: 1000, min: 668 },\r\n    items: 3\r\n  },\r\n  mobile: {\r\n    breakpoint: { max: 668, min: 360 },\r\n    items: 2\r\n  }\r\n};\r\n\r\nconst Animation = () => {\r\n  return (\r\n    <div className=\"bg-black pb-5\">\r\n      <Carousel\r\n        swipeable={true}\r\n        draggable={true}\r\n        showDots={false}\r\n        responsive={responsive}\r\n        ssr={true} // means to render carousel on server-side.\r\n        infinite={true}\r\n        autoPlaySpeed={2000}\r\n        keyBoardControl={true}\r\n        customTransition=\"all .5\"\r\n        transitionDuration={500}\r\n        containerClass=\"carousel-container\"\r\n        // removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n        dotListClass=\"custom-dot-list-style\"\r\n        itemClass=\"carousel-item-padding-40-px\"\r\n      >\r\n        <div className=\"IndicatorCarouselCard\">\r\n          <img className=\"caroimg w-100 p-2\" src=\"../images/11.png\" alt=\"carousolimg\" />\r\n        </div>\r\n        <div className=\"IndicatorCarouselCard\">\r\n          <img className=\"caroimg w-100 p-2\" src=\"../images/12.png\" alt=\"carousolimg\" />\r\n        </div>\r\n        <div className=\"IndicatorCarouselCard\">\r\n          <img className=\"caroimg w-100 p-2\" src=\"../images/13.png\" alt=\"carousolimg\" />\r\n        </div>\r\n        <div className=\"IndicatorCarouselCard\">\r\n          <img className=\"caroimg w-100 p-2\" src=\"../images/14.png\" alt=\"carousolimg\" />\r\n        </div>\r\n        <div className=\"IndicatorCarouselCard\">\r\n          <img className=\"caroimg w-100 p-2\" src=\"../images/15.png\" alt=\"carousolimg\" />\r\n        </div>\r\n        <div className=\"IndicatorCarouselCard\">\r\n          <img className=\"caroimg w-100 p-2\" src=\"../images/16.png\" alt=\"carousolimg\" />\r\n        </div>\r\n        <div className=\"IndicatorCarouselCard\">\r\n          <img className=\"caroimg w-100 p-2\" src=\"../images/17.png\" alt=\"carousolimg\" />\r\n        </div>\r\n      </Carousel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Animation;","import { Fragment } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navigation from './components/nabvar';\nimport Banner from './components/banner';\nimport Mint from './components/mint';\nimport Roadmap from './components/roadmap';\nimport FAQ from './components/faq';\nimport Animation from './components/animation';\nimport './styles/navbar.css';\nimport './styles/main.css';\n\nfunction App() {\n  return (\n    <Fragment>\n      <Navigation />\n      <Banner />\n      <Mint />\n      <Animation />\n      <Roadmap />\n      <FAQ />\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}